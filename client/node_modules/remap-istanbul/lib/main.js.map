{"version":3,"sources":["../src/main.js"],"names":["sources","reports","reportOptions","sourceStore","collector","Object","keys","map","length","undefined","Promise","all","reportType","loadCoverage","remap","writeReport"],"mappings":";;;;;;;;;oBAqBe,UAAUA,OAAV,EAAmBC,OAAnB,EAA4BC,aAA5B,EAA2C;AACzD,OAAIC,cAAc,sBAAlB;AACA,OAAMC,YAAY,qBAAO,4BAAcJ,OAAd,CAAP,EAA+B;AAChDA,aAASG;AADuC,IAA/B,CAAlB;;AAIA,OAAI,CAACE,OAAOC,IAAP,CAAYH,YAAYI,GAAxB,EAA6BC,MAAlC,EAA0C;AACzCL,kBAAcM,SAAd;AACA;;AAGD,UAAOC,QAAQC,GAAR,CACNN,OAAOC,IAAP,CAAYL,OAAZ,EACEM,GADF,CACM;AAAA,WACJ,2BAAaH,SAAb,EAAwBQ,UAAxB,EAAoCV,iBAAiB,EAArD,EAAyDD,QAAQW,UAAR,CAAzD,EAA8ET,WAA9E,CADI;AAAA,IADN,CADM,CAAP;AAMA,G;;;;;;;;;;;;;;;;AAtCD;AACA;AAMO,MAAMU,4DAAN;AACA,MAAMC,uCAAN;AACA,MAAMC,yDAAN;;AAEP;;;;;;;;;;AA2BC","file":"main.js","sourcesContent":["/* jshint node:true */\n/* global Promise */\nimport _loadCoverage from './loadCoverage';\nimport _remap from './remap';\nimport _writeReport from './writeReport';\nimport MemoryStore from '../utils/node!istanbul/lib/store/memory';\n\nexport const loadCoverage = _loadCoverage;\nexport const remap = _remap;\nexport const writeReport = _writeReport;\n\n/**\n * The basic API for utilising remap-istanbul\n * @param  {Array|string} sources The sources that could be consumed and remapped.\n *                                For muliple sources to be combined together, provide\n *                                an array of strings.\n * @param  {Object} reports An object where each key is the report type required and the value\n *                          is the destination for the report.\n * @param  {Object} reportOptions? An object containing the report options.\n * @return {Promise}         A promise that will resolve when all the reports are written.\n */\nexport default function (sources, reports, reportOptions) {\n\tlet sourceStore = new MemoryStore();\n\tconst collector = _remap(_loadCoverage(sources), {\n\t\tsources: sourceStore,\n\t});\n\n\tif (!Object.keys(sourceStore.map).length) {\n\t\tsourceStore = undefined;\n\t}\n\n\n\treturn Promise.all(\n\t\tObject.keys(reports)\n\t\t\t.map(reportType =>\n\t\t\t\t_writeReport(collector, reportType, reportOptions || {}, reports[reportType], sourceStore)\n\t\t\t)\n\t);\n};\n"]}