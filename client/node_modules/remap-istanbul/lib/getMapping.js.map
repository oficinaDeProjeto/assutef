{"version":3,"sources":["../src/getMapping.js"],"names":["getMapping","sourceMap","location","start","line","column","end","originalPositionFor","source","bias","LEAST_UPPER_BOUND","loc","skip"],"mappings":";;;;;;;oBAQwBA,U;;;AANxB;;;;;;AAMe,WAASA,UAAT,CAAoBC,SAApB,EAA+BC,QAA/B,EAAyC;AACvD;AACA,OAAIA,SAASC,KAAT,CAAeC,IAAf,GAAsB,CAAtB,IAA2BF,SAASC,KAAT,CAAeE,MAAf,GAAwB,CAAvD,EAA0D;AACzD,WAAO,IAAP;AACA;AACD;AACA,OAAIH,SAASI,GAAT,CAAaF,IAAb,GAAoB,CAApB,IAAyBF,SAASI,GAAT,CAAaD,MAAb,GAAsB,CAAnD,EAAsD;AACrD,WAAO,IAAP;AACA;;AAED,OAAMF,QAAQF,UAAUM,mBAAV,CAA8BL,SAASC,KAAvC,CAAd;AACA,OAAIG,MAAML,UAAUM,mBAAV,CAA8BL,SAASI,GAAvC,CAAV;;AAEA;AACA,OAAI,CAACH,KAAD,IAAU,CAACG,GAAf,EAAoB;AACnB,WAAO,IAAP;AACA;AACD,OAAI,CAACH,MAAMK,MAAP,IAAiB,CAACF,IAAIE,MAAtB,IAAgCL,MAAMK,MAAN,KAAiBF,IAAIE,MAAzD,EAAiE;AAChE,WAAO,IAAP;AACA;AACD;AACA,OAAIL,MAAMC,IAAN,KAAe,IAAf,IAAuBD,MAAME,MAAN,KAAiB,IAA5C,EAAkD;AACjD,WAAO,IAAP;AACA;AACD;AACA,OAAIC,IAAIF,IAAJ,KAAa,IAAb,IAAqBE,IAAID,MAAJ,KAAe,IAAxC,EAA8C;AAC7C,WAAO,IAAP;AACA;;AAED,OAAIF,MAAMC,IAAN,KAAeE,IAAIF,IAAnB,IAA2BD,MAAME,MAAN,KAAiBC,IAAID,MAApD,EAA4D;AAC3DC,UAAML,UAAUM,mBAAV,CAA8B;AACnCH,WAAMF,SAASI,GAAT,CAAaF,IADgB;AAEnCC,aAAQH,SAASI,GAAT,CAAaD,MAFc;AAGnCI,WAAM,iCAAkBC;AAHW,KAA9B,CAAN;AAKAJ,QAAID,MAAJ,IAAc,CAAd;AACA;;AAED,UAAO;AACNG,YAAQL,MAAMK,MADR;AAENG,SAAK;AACJR,YAAO;AACNC,YAAMD,MAAMC,IADN;AAENC,cAAQF,MAAME;AAFR,MADH;AAKJC,UAAK;AACJF,YAAME,IAAIF,IADN;AAEJC,cAAQC,IAAID;AAFR,MALD;AASJO,WAAMV,SAASU;AATX;AAFC,IAAP;AAcA","file":"getMapping.js","sourcesContent":["import { SourceMapConsumer } from '../utils/node!source-map';\n\n/**\n * A function that determines the original position for a given location\n * @param  {SourceMapConsumer} sourceMap        The source map\n * @param  {Object}            location         The original location Object\n * @return {Object}                             The remapped location Object\n */\nexport default function getMapping(sourceMap, location) {\n\t/* istanbul ignore if: edge case too hard to test for with babel malformation */\n\tif (location.start.line < 1 || location.start.column < 0) {\n\t\treturn null;\n\t}\n\t/* istanbul ignore if: edge case too hard to test for with babel malformation */\n\tif (location.end.line < 1 || location.end.column < 0) {\n\t\treturn null;\n\t}\n\n\tconst start = sourceMap.originalPositionFor(location.start);\n\tlet end = sourceMap.originalPositionFor(location.end);\n\n\t/* istanbul ignore if: edge case too hard to test for */\n\tif (!start || !end) {\n\t\treturn null;\n\t}\n\tif (!start.source || !end.source || start.source !== end.source) {\n\t\treturn null;\n\t}\n\t/* istanbul ignore if: edge case too hard to test for */\n\tif (start.line === null || start.column === null) {\n\t\treturn null;\n\t}\n\t/* istanbul ignore if: edge case too hard to test for */\n\tif (end.line === null || end.column === null) {\n\t\treturn null;\n\t}\n\n\tif (start.line === end.line && start.column === end.column) {\n\t\tend = sourceMap.originalPositionFor({\n\t\t\tline: location.end.line,\n\t\t\tcolumn: location.end.column,\n\t\t\tbias: SourceMapConsumer.LEAST_UPPER_BOUND,\n\t\t});\n\t\tend.column -= 1;\n\t}\n\n\treturn {\n\t\tsource: start.source,\n\t\tloc: {\n\t\t\tstart: {\n\t\t\t\tline: start.line,\n\t\t\t\tcolumn: start.column,\n\t\t\t},\n\t\t\tend: {\n\t\t\t\tline: end.line,\n\t\t\t\tcolumn: end.column,\n\t\t\t},\n\t\t\tskip: location.skip,\n\t\t},\n\t};\n}\n"]}