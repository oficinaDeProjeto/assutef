{
  "_from": "geojsonhint@>=1.1.0 <2.0.0",
  "_id": "geojsonhint@1.1.0",
  "_location": "/anchor/geojsonhint",
  "_npmUser": {
    "name": "tmcw",
    "email": "tom@macwright.org"
  },
  "_npmVersion": "1.4.28",
  "_phantomChildren": {},
  "_requiredBy": [
    "/anchor"
  ],
  "_resolved": "https://registry.npmjs.org/geojsonhint/-/geojsonhint-1.1.0.tgz",
  "_shasum": "dc46c3ce09101f3f9182658ddc3706056fcb4746",
  "_shrinkwrap": null,
  "author": {
    "name": "Tom MacWright"
  },
  "bin": {
    "geojsonhint": "./bin/geojsonhint"
  },
  "bugs": {
    "url": "https://github.com/mapbox/geojsonhint/issues"
  },
  "dependencies": {
    "colors": "~0.6.0-1",
    "concat-stream": "~1.4.4",
    "jsonlint-lines": "~1.6.0",
    "minimist": "1.1.1",
    "optimist": "~0.6.0"
  },
  "description": "validate and sanity-check geojson files",
  "devDependencies": {
    "benchmark": "^1.0.0",
    "fuzzer": "~0.1.0",
    "glob": "~3.2.6",
    "tap": "~1.3.1"
  },
  "directories": {
    "test": "test"
  },
  "dist": {
    "shasum": "dc46c3ce09101f3f9182658ddc3706056fcb4746",
    "tarball": "http://registry.npmjs.org/geojsonhint/-/geojsonhint-1.1.0.tgz"
  },
  "gitHead": "b91513d1d73d23ac157d95cf9aa6fd6cb48f57b6",
  "homepage": "https://github.com/mapbox/geojsonhint",
  "keywords": [
    "geojson",
    "hint"
  ],
  "license": "ISC",
  "main": "index.js",
  "maintainers": [
    {
      "name": "tmcw",
      "email": "tom@macwright.org"
    },
    {
      "name": "mikemorris",
      "email": "michael.patrick.morris@gmail.com"
    },
    {
      "name": "tristen",
      "email": "tristen.brown@gmail.com"
    },
    {
      "name": "mourner",
      "email": "agafonkin@gmail.com"
    },
    {
      "name": "yhahn",
      "email": "young@developmentseed.org"
    },
    {
      "name": "lxbarth",
      "email": "alex@developmentseed.org"
    },
    {
      "name": "ianshward",
      "email": "ian@mapbox.com"
    },
    {
      "name": "ingalls",
      "email": "nicholas.ingalls@gmail.com"
    },
    {
      "name": "morganherlocker",
      "email": "morgan.herlocker@gmail.com"
    },
    {
      "name": "ansis",
      "email": "ansis.brammanis@gmail.com"
    },
    {
      "name": "jfirebaugh",
      "email": "john.firebaugh@gmail.com"
    },
    {
      "name": "miccolis",
      "email": "jeff@miccolis.net"
    },
    {
      "name": "gretacb",
      "email": "carol@mapbox.com"
    },
    {
      "name": "aaronlidman",
      "email": "aaronlidman@gmail.com"
    },
    {
      "name": "camilleanne",
      "email": "camille@mapbox.com"
    },
    {
      "name": "rclark",
      "email": "ryan.clark.j@gmail.com"
    },
    {
      "name": "mapbox",
      "email": "accounts@mapbox.com"
    },
    {
      "name": "willwhite",
      "email": "will@mapbox.com"
    },
    {
      "name": "springmeyer",
      "email": "dane@mapbox.com"
    },
    {
      "name": "kkaefer",
      "email": "kkaefer@gmail.com"
    },
    {
      "name": "dthompson",
      "email": "dthompson@gmail.com"
    }
  ],
  "name": "geojsonhint",
  "optionalDependencies": {},
  "readme": "[![Build Status](https://secure.travis-ci.org/mapbox/geojsonhint.svg?branch=master)](http://travis-ci.org/mapbox/geojsonhint) [![Coverage Status](https://coveralls.io/repos/mapbox/geojsonhint/badge.svg)](https://coveralls.io/r/mapbox/geojsonhint)\n\n# geojsonhint: complete, fast, standards-based validation for geojson\n\nA [lint](http://bit.ly/12jjJyW) tool for the [GeoJSON](http://www.geojson.org/)\nstandard. geojsonhint is written _to the standard_, with no missing or additional\nopinions about structure.\n\nThanks to `jsonlint-lines`, GeoJSON that is also not valid [JSON](http://json.org/)\ncan return informative, line-oriented parsing errors.\n\n## Specification\n\nThe basis of this tool is the published [GeoJSON](http://www.geojson.org/) 1.0 specification.\nIn the few cases where [draft-geojson](https://github.com/geojson/draft-geojson/blob/master/middle.mkd),\nthe ietf-candidate version of GeoJSON, is more precise (for instance, [the id property](https://github.com/mapbox/geojsonhint/issues/24)), the validator follows the draft spec as well.\n\n## API\n\n`errors = geojsonhint.hint(string or object)`\n\nLint a file, given as a string or object. This call detects all aberrations from\nthe GeoJSON standards and returns them as an array of errors. An example of the output:\n\n```json\n[{\n  \"message\": \"\\\"features\\\" property should be an array, but is an object instead\",\n  \"line\": 1\n}]\n```\n\n## Line Numbers\n\nNote that the GeoJSON can be given as a **string or as an object**. Here's how\nto choose which input to use:\n\n* `string` inputs receive **line numbers for each error**. These make errors\n  easier to track down if the GeoJSON is hand-written.\n* `object` inputs don't have line numbers but are evaluated faster, by up to 10x.\n  GeoJSONHint is _very fast already_ so unless you have identified it as a\n  bottleneck in your application, don't [prematurely optimize](http://c2.com/cgi/wiki?PrematureOptimization) based\n  on this fact.\n\nFor byte-minimalists, you can `require('geojsonhint/object')` to get a version\nof this library that bypasses jsonlint-lines and provides only the object\ninterface.\n\n## use it\n\nas a library\n\n    npm install --save geojsonhint\n\nas a web library\n\n    curl https://raw.github.com/mapbox/geojsonhint/master/geojsonhint.js > geojsonhint.js\n\n## As a command-line utility\n\nInstall:\n\n    npm install -g geojsonhint\n\n```\n➟ geojsonhint\nUsage: geojsonhint FILE.geojson\n\nOptions:\n  --json  output json-formatted data for hints\n```\n\n```\n➟ geojsonhint test.geojson\nline 9, each element in a position must be a number\n```\n\n## developing\n\nTests:\n\n    npm test\n\nBuilding the browser version:\n\n    npm install -g browserify\n    make\n\n## See Also\n\n* [geojsonhint online](https://www.mapbox.com/geojsonhint/)\n* [grunt-geojsonhint](https://github.com/jieter/grunt-geojsonhint) does it as a Grunt task\n* [geojsonlint.com](http://geojsonlint.com/) does this server-side\n* [GeoJSON-Validation](https://github.com/craveprogramminginc/GeoJSON-Validation) is another node module for this.\n* [geojson-assert](https://github.com/calvinmetcalf/geojson-assert) does it in assertion tests\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/mapbox/geojsonhint.git"
  },
  "scripts": {
    "test": "tap test/*.js --coverage"
  },
  "version": "1.1.0"
}
